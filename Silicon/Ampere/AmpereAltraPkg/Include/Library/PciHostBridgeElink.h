/** @file

  Copyright (c) 2020, Ampere Computing LLC. All rights reserved.<BR>

  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#ifndef PCI_HOST_BRIDGE_ELINK_H_
#define PCI_HOST_BRIDGE_ELINK_H_

#include <Protocol/PciHostBridgeResourceAllocation.h>

typedef BOOLEAN (PCI_CHECK_ROOT_BRIDGE_DISABLED_FUNC)(IN UINTN, IN UINTN);
#define PCI_CHECK_ROOT_BRIDGE_DISABLED Ac01PcieCheckRootBridgeDisabled
extern PCI_CHECK_ROOT_BRIDGE_DISABLED_FUNC PCI_CHECK_ROOT_BRIDGE_DISABLED;

typedef EFI_STATUS (PCI_CORE_SETUP_FUNC)(EFI_HANDLE, EFI_SYSTEM_TABLE*);
#define PCI_CORE_SETUP Ac01PcieSetup
extern PCI_CORE_SETUP_FUNC PCI_CORE_SETUP;

typedef EFI_STATUS (PCI_CORE_END_FUNC)(VOID);
#define PCI_CORE_END Ac01PcieEnd
extern PCI_CORE_END_FUNC PCI_CORE_END;

typedef UINTN (PCI_GET_NUMBER_HOSTBRIDGE_FUNC)(VOID);
#define PCI_GET_NUMBER_HOSTBRIDGE Ac01PcieGetTotalHBs
extern PCI_GET_NUMBER_HOSTBRIDGE_FUNC PCI_GET_NUMBER_HOSTBRIDGE;

typedef UINTN (PCI_GET_NUMBER_ROOTBRIDGE_FUNC)(UINTN);
#define PCI_GET_NUMBER_ROOTBRIDGE Ac01PcieGetTotalRBsPerHB
extern PCI_GET_NUMBER_ROOTBRIDGE_FUNC PCI_GET_NUMBER_ROOTBRIDGE;

typedef UINTN (PCI_GET_ROOTBRIDGE_ATTR_FUNC)(UINTN);
#define PCI_GET_ROOTBRIDGE_ATTR Ac01PcieGetRootBridgeAttribute
extern PCI_GET_ROOTBRIDGE_ATTR_FUNC PCI_GET_ROOTBRIDGE_ATTR;

typedef UINTN (PCI_GET_ROOTBRIDGE_SEGMENTNUMBER_FUNC)(UINTN, UINTN);
#define PCI_GET_ROOTBRIDGE_SEGMENTNUMBER Ac01PcieGetRootBridgeSegmentNumber
extern PCI_GET_ROOTBRIDGE_SEGMENTNUMBER_FUNC PCI_GET_ROOTBRIDGE_SEGMENTNUMBER;

typedef EFI_STATUS (PCI_CORE_SETUP_HOST_BRIDGE_FUNC)(IN UINTN);
#define PCI_CORE_SETUP_HOST_BRIDGE Ac01PcieSetupHostBridge
extern PCI_CORE_SETUP_HOST_BRIDGE_FUNC PCI_CORE_SETUP_HOST_BRIDGE;

typedef EFI_STATUS (PCI_CORE_SETUP_ROOT_BRIDGE_FUNC)(IN UINTN, IN UINTN, IN PCI_ROOT_BRIDGE *);
#define PCI_CORE_SETUP_ROOT_BRIDGE Ac01PcieSetupRootBridge
extern PCI_CORE_SETUP_ROOT_BRIDGE_FUNC PCI_CORE_SETUP_ROOT_BRIDGE;

typedef EFI_STATUS (PCI_CORE_IO_PCI_RW_FUNC)(IN VOID *, IN UINT64, IN BOOLEAN, IN UINTN, IN OUT VOID *);
#define PCI_CORE_IO_PCI_RW Ac01PcieConfigRW
extern  PCI_CORE_IO_PCI_RW_FUNC PCI_CORE_IO_PCI_RW;

typedef VOID (PCI_CORE_HOST_BRIDGE_NOTIFY_PHASE_FUNC)(IN UINTN, IN UINTN, IN EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE);
#define PCI_CORE_HOST_BRIDGE_NOTIFY_PHASE Ac01PcieHostBridgeNotifyPhase
extern PCI_CORE_HOST_BRIDGE_NOTIFY_PHASE_FUNC PCI_CORE_HOST_BRIDGE_NOTIFY_PHASE;

#endif /* PCI_HOST_BRIDGE_ELINK_H_ */
